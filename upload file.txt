[ApiController]
[Route("[controller]")]
public class FileController : ControllerBase
{
    private readonly ILogger<FileController> _logger;
    private readonly IGenericRepository<Candidatemaster> _repository;
    private readonly ExcelReader _excelReader;

    public FileController(ILogger<FileController> logger, IGenericRepository<Candidatemaster> repository, ExcelReader excelReader)
    {
        _logger = logger;
        _repository = repository;
        _excelReader = excelReader;
    }

    [HttpPost("upload")]
    public async Task<IActionResult> Upload(IFormFile file)
    {
        try
        {
            if (file == null || file.Length == 0)
            {
                return BadRequest("No file selected for upload.");
            }

            if (!Path.GetExtension(file.FileName).Equals(".xlsx", StringComparison.OrdinalIgnoreCase))
            {
                return BadRequest("Only Excel files (.xlsx) are allowed.");
            }

            var filePath = Path.Combine("YourApiFolderPath", file.FileName);

            using (var stream = new FileStream(filePath, FileMode.Create))
            {
                await file.CopyToAsync(stream);
            }

            var data = _excelReader.ReadCandidatesFromExcel(filePath);
            await _repository.AddRangeAsync(data);

            return Ok(new { message = "File uploaded and data saved successfully." });
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "Error while uploading file or saving data.");
            return StatusCode(500, new { message = "File upload failed." });
        }
    }
}
----------------------
public class ExcelReader
{
    public IEnumerable<CandidateModel> ReadCandidatesFromExcel(string filePath)
    {
        var candidates = new List<CandidateModel>();

        using (SpreadsheetDocument doc = SpreadsheetDocument.Open(filePath, false))
        {
            WorkbookPart workbookPart = doc.WorkbookPart;
            Sheet sheet = workbookPart.Workbook.Sheets.GetFirstChild<Sheet>();
            WorksheetPart worksheetPart = (WorksheetPart)workbookPart.GetPartById(sheet.Id);
            SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();

            foreach (Row row in sheetData.Elements<Row>().Skip(1)) // Skip header row
            {
                var candidate = new CandidateModel
                {
                    CandidateId = int.Parse(row.Elements<Cell>().ElementAt(0).InnerText),
                    CandidateName = row.Elements<Cell>().ElementAt(1).InnerText,
                    CandidateEmailId = row.Elements<Cell>().ElementAt(2).InnerText,
                    CandidatePhoneNumber = row.Elements<Cell>().ElementAt(3).InnerText,
                    // Map other properties...
                };

                candidates.Add(candidate);
            }
        }

        return candidates;
    }
}
